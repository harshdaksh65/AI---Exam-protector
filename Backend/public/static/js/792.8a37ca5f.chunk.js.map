{"version":3,"file":"static/js/792.8a37ca5f.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","components/shared/DashboardCard.js","slices/examApiSlice.js","views/teacher/components/AddQuestionForm.jsx","views/teacher/AddQuestions.jsx","../node_modules/@mui/material/ListItemIcon/listItemIconClasses.js","../node_modules/@mui/material/ListItemText/listItemTextClasses.js","../node_modules/@mui/material/Divider/dividerClasses.js","../node_modules/@mui/material/MenuItem/menuItemClasses.js","../node_modules/@mui/material/MenuItem/MenuItem.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nconst PageContainer = ({ title, description, children }) => (\n  <div>\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport { Card, CardContent, Typography, Stack, Box } from '@mui/material';\n\nconst DashboardCard = ({\n  title,\n  subtitle,\n  children,\n  action,\n  footer,\n  cardheading,\n  headtitle,\n  headsubtitle,\n  middlecontent,\n}) => {\n\n  return (\n    <Card\n      sx={{ padding: 0 }}\n      elevation={9}\n      variant={undefined}\n    >\n      {cardheading ? (\n        <CardContent>\n          <Typography variant=\"h5\">{headtitle}</Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\">\n            {headsubtitle}\n          </Typography>\n        </CardContent>\n      ) : (\n        <CardContent sx={{ p: \"30px\" }}>\n          {title ? (\n            <Stack\n              direction=\"row\"\n              spacing={2}\n              justifyContent=\"space-between\"\n              alignItems={'center'}\n              mb={3}\n            >\n              <Box>\n                {title ? <Typography variant=\"h5\">{title}</Typography> : ''}\n\n                {subtitle ? (\n                  <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                    {subtitle}\n                  </Typography>\n                ) : (\n                  ''\n                )}\n              </Box>\n              {action}\n            </Stack>\n          ) : null}\n\n          {children}\n        </CardContent>\n      )}\n\n      {middlecontent}\n      {footer}\n    </Card>\n  );\n};\n\nexport default DashboardCard;\n","import { apiSlice } from './apiSlice';\n\n// Define the base URL for the exams API\nconst EXAMS_URL = '/api/exams';\n\n// Inject endpoints for the exam slice\nexport const examApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    // Get all exams\n    getExams: builder.query({\n      query: () => ({\n        url: `${EXAMS_URL}/exam`,\n        method: 'GET',\n      }),\n    }),\n    // Create a new exam\n    createExam: builder.mutation({\n      query: (data) => ({\n        url: `${EXAMS_URL}/exam`,\n        method: 'POST',\n        body: data,\n      }),\n    }),\n    // Get questions for a specific exam\n    getQuestions: builder.query({\n      query: (examId) => ({\n        url: `${EXAMS_URL}/exam/questions/${examId}`,\n        method: 'GET',\n      }),\n    }),\n    // Create a new question for an exam\n    createQuestion: builder.mutation({\n      query: (data) => ({\n        url: `${EXAMS_URL}/exam/questions`,\n        method: 'POST',\n        body: data,\n      }),\n    }),\n  }),\n});\n\n// Export the generated hooks for each endpoint\nexport const {\n  useGetExamsQuery,\n  useCreateExamMutation,\n  useGetQuestionsQuery,\n  useCreateQuestionMutation,\n} = examApiSlice;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  TextField,\n  FormControlLabel,\n  Checkbox,\n  Stack,\n  Select,\n  MenuItem,\n} from '@mui/material';\nimport swal from 'sweetalert';\nimport { useCreateQuestionMutation, useGetExamsQuery } from 'src/slices/examApiSlice';\nimport { toast } from 'react-toastify';\n\nconst AddQuestionForm = () => {\n  const [questions, setQuestions] = useState([]);\n  const [newQuestion, setNewQuestion] = useState('');\n  const [newOptions, setNewOptions] = useState(['', '', '', '']);\n  const [correctOptions, setCorrectOptions] = useState([false, false, false, false]);\n  const [selectedExamId, setSelectedExamId] = useState('');\n\n  const handleOptionChange = (index) => {\n    const updatedCorrectOptions = [...correctOptions];\n    updatedCorrectOptions[index] = !correctOptions[index];\n    setCorrectOptions(updatedCorrectOptions);\n  };\n\n  const [createQuestion, { isLoading }] = useCreateQuestionMutation();\n  const { data: examsData } = useGetExamsQuery();\n\n  useEffect(() => {\n    if (examsData && examsData.length > 0) {\n      setSelectedExamId(examsData[0].examId);\n      console.log(examsData[0].examId, 'examsData[0].examId');\n    }\n  }, [examsData]);\n\n  const handleAddQuestion = async () => {\n    if (newQuestion.trim() === '' || newOptions.some((option) => option.trim() === '')) {\n      swal('', 'Please fill out the question and all options.', 'error');\n      return;\n    }\n\n    const newQuestionObj = {\n      question: newQuestion,\n      options: newOptions.map((option, index) => ({\n        optionText: option,\n        isCorrect: correctOptions[index],\n      })),\n      examId: selectedExamId,\n    };\n\n    try {\n      const res = await createQuestion(newQuestionObj).unwrap();\n      if (res) {\n        toast.success('Question added successfully!!!');\n      }\n      setQuestions([...questions, res]);\n      setNewQuestion('');\n      setNewOptions(['', '', '', '']);\n      setCorrectOptions([false, false, false, false]);\n    } catch (err) {\n      swal('', 'Failed to create question. Please try again.', 'error');\n    }\n  };\n\n  const handleSubmitQuestions = () => {\n    setQuestions([]);\n    setNewQuestion('');\n    setNewOptions(['', '', '', '']);\n    setCorrectOptions([false, false, false, false]);\n  };\n\n  return (\n    <div>\n      <Select\n        label=\"Select Exam\"\n        value={selectedExamId}\n        onChange={(e) => {\n          console.log(e.target.value, 'option ID');\n          setSelectedExamId(e.target.value);\n        }}\n        fullWidth\n        sx={{ mb: 2 }}\n      >\n        {examsData &&\n          examsData.map((exam) => (\n            <MenuItem key={exam.examId} value={exam.examId}>\n              {exam.examName}\n            </MenuItem>\n          ))}\n      </Select>\n\n      {questions.map((questionObj, questionIndex) => (\n        <div key={questionIndex}>\n          <TextField\n            label={`Question ${questionIndex + 1}`}\n            value={questionObj.question}\n            fullWidth\n            InputProps={{\n              readOnly: true,\n            }}\n          />\n          {questionObj.options.map((option, optionIndex) => (\n            <div key={optionIndex}>\n              <TextField\n                label={`Option ${optionIndex + 1}`}\n                value={option.optionText}\n                fullWidth\n                InputProps={{\n                  readOnly: true,\n                }}\n              />\n              <FormControlLabel\n                control={<Checkbox checked={option.isCorrect} disabled />}\n                label={`Correct Option ${optionIndex + 1}`}\n              />\n            </div>\n          ))}\n        </div>\n      ))}\n\n      <TextField\n        label=\"New Question\"\n        value={newQuestion}\n        onChange={(e) => setNewQuestion(e.target.value)}\n        fullWidth\n        rows={4}\n        sx={{ mb: 1 }}\n      />\n\n      {newOptions.map((option, index) => (\n        <Stack\n          key={index}\n          direction=\"row\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          spacing={1}\n          mb={1}\n        >\n          <TextField\n            label={`Option ${index + 1}`}\n            value={newOptions[index]}\n            onChange={(e) => {\n              const updatedOptions = [...newOptions];\n              updatedOptions[index] = e.target.value;\n              setNewOptions(updatedOptions);\n            }}\n            fullWidth\n            sx={{ flex: '80%' }}\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={correctOptions[index]}\n                onChange={() => handleOptionChange(index)}\n              />\n            }\n            label={`Correct Option ${index + 1}`}\n          />\n        </Stack>\n      ))}\n\n      <Stack mt={2} direction=\"row\" spacing={2}>\n        <Button variant=\"outlined\" onClick={handleAddQuestion}>\n          Add Question\n        </Button>\n        <Button variant=\"outlined\" onClick={handleSubmitQuestions}>\n          Submit Questions\n        </Button>\n      </Stack>\n    </div>\n  );\n};\n\nexport default AddQuestionForm;\n","import React from 'react';\nimport { Typography } from '@mui/material';\nimport PageContainer from 'src/components/container/PageContainer';\nimport DashboardCard from '../../components/shared/DashboardCard';\nimport AddQuestionForm from './components/AddQuestionForm';\n\nconst AddQuestions = () => {\n  return (\n    <PageContainer title=\"Add Questions Page\" description=\"this is Add Questions page\">\n      <DashboardCard title=\"Add Questions Page\">\n        <Typography>This is a Add Questions page</Typography>\n        <AddQuestionForm />\n      </DashboardCard>\n    </PageContainer>\n  );\n};\n\nexport default AddQuestions;\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemIconUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemIcon', slot);\n}\nconst listItemIconClasses = generateUtilityClasses('MuiListItemIcon', ['root', 'alignItemsFlexStart']);\nexport default listItemIconClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getListItemTextUtilityClass(slot) {\n  return generateUtilityClass('MuiListItemText', slot);\n}\nconst listItemTextClasses = generateUtilityClasses('MuiListItemText', ['root', 'multiline', 'dense', 'inset', 'primary', 'secondary']);\nexport default listItemTextClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getMenuItemUtilityClass(slot) {\n  return generateUtilityClass('MuiMenuItem', slot);\n}\nconst menuItemClasses = generateUtilityClasses('MuiMenuItem', ['root', 'focusVisible', 'dense', 'disabled', 'divider', 'gutters', 'selected']);\nexport default menuItemClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"autoFocus\", \"component\", \"dense\", \"divider\", \"disableGutters\", \"focusVisibleClassName\", \"role\", \"tabIndex\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha } from '@mui/system';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport ListContext from '../List/ListContext';\nimport ButtonBase from '../ButtonBase';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useForkRef from '../utils/useForkRef';\nimport { dividerClasses } from '../Divider';\nimport { listItemIconClasses } from '../ListItemIcon';\nimport { listItemTextClasses } from '../ListItemText';\nimport menuItemClasses, { getMenuItemUtilityClass } from './menuItemClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport const overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, ownerState.dense && styles.dense, ownerState.divider && styles.divider, !ownerState.disableGutters && styles.gutters];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    disabled,\n    dense,\n    divider,\n    disableGutters,\n    selected,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', dense && 'dense', disabled && 'disabled', !disableGutters && 'gutters', divider && 'divider', selected && 'selected']\n  };\n  const composedClasses = composeClasses(slots, getMenuItemUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\nconst MenuItemRoot = styled(ButtonBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiMenuItem',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({}, theme.typography.body1, {\n  display: 'flex',\n  justifyContent: 'flex-start',\n  alignItems: 'center',\n  position: 'relative',\n  textDecoration: 'none',\n  minHeight: 48,\n  paddingTop: 6,\n  paddingBottom: 6,\n  boxSizing: 'border-box',\n  whiteSpace: 'nowrap'\n}, !ownerState.disableGutters && {\n  paddingLeft: 16,\n  paddingRight: 16\n}, ownerState.divider && {\n  borderBottom: `1px solid ${(theme.vars || theme).palette.divider}`,\n  backgroundClip: 'padding-box'\n}, {\n  '&:hover': {\n    textDecoration: 'none',\n    backgroundColor: (theme.vars || theme).palette.action.hover,\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  },\n  [`&.${menuItemClasses.selected}`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    [`&.${menuItemClasses.focusVisible}`]: {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n    }\n  },\n  [`&.${menuItemClasses.selected}:hover`]: {\n    backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: theme.vars ? `rgba(${theme.vars.palette.primary.mainChannel} / ${theme.vars.palette.action.selectedOpacity})` : alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity)\n    }\n  },\n  [`&.${menuItemClasses.focusVisible}`]: {\n    backgroundColor: (theme.vars || theme).palette.action.focus\n  },\n  [`&.${menuItemClasses.disabled}`]: {\n    opacity: (theme.vars || theme).palette.action.disabledOpacity\n  },\n  [`& + .${dividerClasses.root}`]: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1)\n  },\n  [`& + .${dividerClasses.inset}`]: {\n    marginLeft: 52\n  },\n  [`& .${listItemTextClasses.root}`]: {\n    marginTop: 0,\n    marginBottom: 0\n  },\n  [`& .${listItemTextClasses.inset}`]: {\n    paddingLeft: 36\n  },\n  [`& .${listItemIconClasses.root}`]: {\n    minWidth: 36\n  }\n}, !ownerState.dense && {\n  [theme.breakpoints.up('sm')]: {\n    minHeight: 'auto'\n  }\n}, ownerState.dense && _extends({\n  minHeight: 32,\n  // https://m2.material.io/components/menus#specs > Dense\n  paddingTop: 4,\n  paddingBottom: 4\n}, theme.typography.body2, {\n  [`& .${listItemIconClasses.root} svg`]: {\n    fontSize: '1.25rem'\n  }\n})));\nconst MenuItem = /*#__PURE__*/React.forwardRef(function MenuItem(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiMenuItem'\n  });\n  const {\n      autoFocus = false,\n      component = 'li',\n      dense = false,\n      divider = false,\n      disableGutters = false,\n      focusVisibleClassName,\n      role = 'menuitem',\n      tabIndex: tabIndexProp,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const context = React.useContext(ListContext);\n  const childContext = React.useMemo(() => ({\n    dense: dense || context.dense || false,\n    disableGutters\n  }), [context.dense, dense, disableGutters]);\n  const menuItemRef = React.useRef(null);\n  useEnhancedEffect(() => {\n    if (autoFocus) {\n      if (menuItemRef.current) {\n        menuItemRef.current.focus();\n      } else if (process.env.NODE_ENV !== 'production') {\n        console.error('MUI: Unable to set focus to a MenuItem whose component has not been rendered.');\n      }\n    }\n  }, [autoFocus]);\n  const ownerState = _extends({}, props, {\n    dense: childContext.dense,\n    divider,\n    disableGutters\n  });\n  const classes = useUtilityClasses(props);\n  const handleRef = useForkRef(menuItemRef, ref);\n  let tabIndex;\n  if (!props.disabled) {\n    tabIndex = tabIndexProp !== undefined ? tabIndexProp : -1;\n  }\n  return /*#__PURE__*/_jsx(ListContext.Provider, {\n    value: childContext,\n    children: /*#__PURE__*/_jsx(MenuItemRoot, _extends({\n      ref: handleRef,\n      role: role,\n      tabIndex: tabIndex,\n      component: component,\n      focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n      className: clsx(classes.root, className)\n    }, other, {\n      ownerState: ownerState,\n      classes: classes\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? MenuItem.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the list item is focused during the first mount.\n   * Focus will also be triggered if the value changes from false to true.\n   * @default false\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, compact vertical padding designed for keyboard and mouse input is used.\n   * The prop defaults to the value inherited from the parent Menu component.\n   * @default false\n   */\n  dense: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, a 1px light border is added to the bottom of the menu item.\n   * @default false\n   */\n  divider: PropTypes.bool,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * If `true`, the component is selected.\n   * @default false\n   */\n  selected: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @default 0\n   */\n  tabIndex: PropTypes.number\n} : void 0;\nexport default MenuItem;"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","subtitle","action","footer","cardheading","headtitle","headsubtitle","middlecontent","Card","sx","padding","elevation","variant","undefined","CardContent","Typography","color","p","Stack","direction","spacing","justifyContent","alignItems","mb","Box","EXAMS_URL","examApiSlice","apiSlice","injectEndpoints","endpoints","builder","getExams","query","url","concat","method","createExam","mutation","data","body","getQuestions","examId","createQuestion","useGetExamsQuery","useCreateExamMutation","useGetQuestionsQuery","useCreateQuestionMutation","AddQuestionForm","questions","setQuestions","useState","newQuestion","setNewQuestion","newOptions","setNewOptions","correctOptions","setCorrectOptions","selectedExamId","setSelectedExamId","isLoading","examsData","useEffect","length","console","log","Select","label","value","onChange","e","target","fullWidth","map","exam","MenuItem","examName","questionObj","questionIndex","TextField","question","InputProps","readOnly","options","option","optionIndex","optionText","FormControlLabel","control","Checkbox","checked","isCorrect","disabled","rows","index","updatedOptions","flex","updatedCorrectOptions","handleOptionChange","mt","Button","onClick","async","trim","some","swal","newQuestionObj","res","unwrap","toast","success","err","handleSubmitQuestions","AddQuestions","PageContainer","DashboardCard","getListItemIconUtilityClass","slot","generateUtilityClass","generateUtilityClasses","getListItemTextUtilityClass","getMenuItemUtilityClass","_excluded","MenuItemRoot","styled","ButtonBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","props","styles","ownerState","root","dense","divider","disableGutters","gutters","theme","_extends","typography","body1","display","position","textDecoration","minHeight","paddingTop","paddingBottom","boxSizing","whiteSpace","paddingLeft","paddingRight","borderBottom","vars","palette","backgroundClip","backgroundColor","hover","menuItemClasses","selected","primary","mainChannel","selectedOpacity","alpha","main","focusVisible","focusOpacity","hoverOpacity","focus","opacity","disabledOpacity","dividerClasses","marginTop","marginBottom","inset","marginLeft","listItemTextClasses","listItemIconClasses","minWidth","breakpoints","up","body2","fontSize","React","inProps","ref","useThemeProps","autoFocus","component","focusVisibleClassName","role","tabIndex","tabIndexProp","className","other","_objectWithoutPropertiesLoose","context","ListContext","childContext","menuItemRef","useEnhancedEffect","current","classes","slots","composedClasses","composeClasses","useUtilityClasses","handleRef","useForkRef","Provider","clsx"],"sourceRoot":""}