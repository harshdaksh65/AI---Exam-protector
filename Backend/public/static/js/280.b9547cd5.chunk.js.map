{"version":3,"file":"static/js/280.b9547cd5.chunk.js","mappings":"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","sources":["components/container/PageContainer.js","components/forms/theme-elements/CustomTextField.js","layouts/full/shared/logo/Logo.js","slices/usersApiSlice.js","views/authentication/Loader.jsx","views/authentication/auth/AuthUpdate.jsx","views/authentication/UserAccount.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\n\nconst PageContainer = ({ title, description, children }) => (\n  <div>\n    <Helmet>\n      <title>{title}</title>\n      <meta name=\"description\" content={description} />\n    </Helmet>\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  title: PropTypes.string,\n  description: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react';\nimport { styled } from '@mui/material/styles';\nimport { TextField } from '@mui/material';\n\nconst CustomTextField = styled((props) => <TextField {...props} />)(({ theme }) => ({\n  '& .MuiOutlinedInput-input::-webkit-input-placeholder': {\n    color: theme.palette.text.secondary,\n    opacity: '0.8',\n  },\n  '& .MuiOutlinedInput-input.Mui-disabled::-webkit-input-placeholder': {\n    color: theme.palette.text.secondary,\n    opacity: '1',\n  },\n  '& .Mui-disabled .MuiOutlinedInput-notchedOutline': {\n    borderColor: theme.palette.grey[200],\n  },\n}));\n\nexport default CustomTextField;\n","import { Link } from 'react-router-dom';\nimport { styled } from '@mui/material';\n// Logo image is now served from public folder\n\nconst LinkStyled = styled(Link)(() => ({\n  height: '100px',\n  width: '260px',\n  overflow: 'hidden',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  margin: '0 auto',\n  textDecoration: 'none',\n}));\n\n\nconst Logo = () => {\n  return (\n    <LinkStyled to=\"/\">\n  <img src=\"/dark-logo.svg\" alt=\"Exam Shield Logo\" height={100} />\n    </LinkStyled>\n  );\n}\n\nexport default Logo;\n","import { apiSlice } from './apiSlice';\nconst USERS_URL = '/api/users';\n\n// inject endpoint we can create our enpoint here\n// and the got injected in api slice endpoints part\n// now in form we just have to hit this login action\nexport const userApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    //Login Api\n    login: builder.mutation({\n      //data contain email,password\n\n      query: (data) => ({\n        // backend url\n        url: `${USERS_URL}/auth`,\n        method: 'POST',\n        body: data,\n      }),\n    }),\n    //Register Mutation Api\n    register: builder.mutation({\n      query: (data) => ({\n        url: `${USERS_URL}`,\n        method: 'POST',\n        body: data,\n      }),\n    }),\n    // LogOut Api\n    logout: builder.mutation({\n      query: () => ({\n        url: `${USERS_URL}/logout`,\n        method: 'POST',\n      }),\n    }),\n    updateUser: builder.mutation({\n      query: (data) => ({\n        url: `${USERS_URL}/profile`,\n        method: 'PUT',\n        body: data,\n      }),\n    }),\n  }),\n});\n\n// it specify convention to export them\n// like for mutation we have to add use + name + Mutation\n// like for query we have to add use + name + query\nexport const { useLoginMutation, useLogoutMutation, useRegisterMutation, useUpdateUserMutation } =\n  userApiSlice;\n","import * as React from 'react';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nexport default function Loader() {\n  return (\n    <>\n      <Backdrop open sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </>\n  );\n}\n","import React from 'react';\nimport { Box, Typography, Button, Select, MenuItem } from '@mui/material';\n\nimport CustomTextField from '../../../components/forms/theme-elements/CustomTextField';\nimport { Stack } from '@mui/system';\n\nconst AuthUpdate = ({ formik, title, subtitle, subtext }) => {\n  const { values, errors, touched, handleBlur, handleChange, handleSubmit } = formik;\n  return (\n    <>\n      {title ? (\n        <Typography fontWeight=\"700\" variant=\"h2\" mb={1}>\n          {title}\n        </Typography>\n      ) : null}\n\n      {subtext}\n\n      <Box component=\"form\">\n        <Stack mb={3}>\n          <Typography\n            variant=\"subtitle1\"\n            fontWeight={600}\n            component=\"label\"\n            htmlFor=\"name\"\n            mb=\"5px\"\n          >\n            Name\n          </Typography>\n          <CustomTextField\n            id=\"name\"\n            name=\"name\"\n            placeholder=\"Enter Your Name \"\n            variant=\"outlined\"\n            value={values.name}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.name && errors.name ? true : false}\n            helperText={touched.name && errors.name ? errors.name : null}\n            // onChange={onNameChange} // Call the callback function on change\n            fullWidth\n            required\n            //   size=\"small\"\n          />\n\n          <Typography\n            variant=\"subtitle1\"\n            fontWeight={600}\n            component=\"label\"\n            htmlFor=\"email\"\n            mb=\"5px\"\n            mt=\"25px\"\n          >\n            Email Address\n          </Typography>\n          <CustomTextField\n            id=\"email\"\n            name=\"email\"\n            variant=\"outlined\"\n            placeholder=\"Enter Your Email\"\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.email && errors.email ? true : false}\n            helperText={touched.email && errors.email ? errors.email : null}\n            required\n            fullWidth\n            // onChange={onEmailChange} // Call the callback function on change\n            //   size=\"small\"\n          />\n\n          <Typography\n            variant=\"subtitle1\"\n            fontWeight={600}\n            component=\"label\"\n            htmlFor=\"password\"\n            mb=\"5px\"\n            mt=\"25px\"\n          >\n            Password\n          </Typography>\n          <CustomTextField\n            id=\"password\"\n            name=\"password\"\n            type=\"password\"\n            variant=\"outlined\"\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.password && errors.password ? true : false}\n            helperText={touched.password && errors.password ? errors.password : null}\n            required\n            fullWidth\n            // onChange={onPasswordChange} // Call the callback function on change\n            //   size=\"small\"\n          />\n          <Typography\n            variant=\"subtitle1\"\n            fontWeight={600}\n            component=\"label\"\n            htmlFor=\"confirm_password\"\n            mb=\"5px\"\n            mt=\"25px\"\n          >\n            Confirm Password\n          </Typography>\n          <CustomTextField\n            id=\"confirm_password\"\n            name=\"confirm_password\"\n            type=\"password\"\n            autoComplete=\"false\"\n            variant=\"outlined\"\n            value={values.confirm_password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={touched.confirm_password && errors.confirm_password ? true : false}\n            helperText={\n              touched.confirm_password && errors.confirm_password ? errors.confirm_password : null\n            }\n            fullWidth\n            required\n            // onChange={onConfirmPasswordChange} // Call the callback function on change\n            //   size=\"small\"\n          />\n          <Typography\n            variant=\"subtitle1\"\n            fontWeight={600}\n            component=\"label\"\n            htmlFor=\"role\"\n            mb=\"5px\"\n            mt=\"25px\"\n          >\n            Role\n          </Typography>\n          <Select\n            id=\"role\"\n            name=\"role\"\n            required\n            displayEmpty\n            value={values.role}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={!!(touched.role && errors.role)}\n            // value={userRole}\n            // onChange={onRoleChange} // Call the callback function on change\n            // inputProps={{ 'aria-label': 'Without label' }}\n            //   size=\"small\"\n          >\n            <MenuItem value=\"student\">Student</MenuItem>\n            <MenuItem value=\"teacher\">Teacher</MenuItem>\n          </Select>\n        </Stack>\n        <Button\n          // size=\"small\"\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          fullWidth\n          // component={Link}\n          // to=\"/auth/login\"\n          onClick={handleSubmit}\n          // onClick={onSubmit} // Call the callback function on button click\n        >\n          Update\n        </Button>\n      </Box>\n      {subtitle}\n    </>\n  );\n};\nexport default AuthUpdate;\n","import React, { useEffect } from 'react';\nimport { Grid, Box, Card, Typography, Stack } from '@mui/material';\nimport { Link, useNavigate } from 'react-router-dom';\nimport PageContainer from 'src/components/container/PageContainer';\nimport Logo from 'src/layouts/full/shared/logo/Logo';\nimport { useFormik } from 'formik';\nimport * as yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { useUpdateUserMutation } from '../../slices/usersApiSlice';\nimport { setCredentials } from '../../slices/authSlice';\nimport Loader from './Loader';\nimport AuthUpdate from './auth/AuthUpdate';\n\nconst userValidationSchema = yup.object({\n  name: yup.string().min(2).max(25).required('Please enter your name'),\n  email: yup.string('Enter your email').email('Enter a valid email').required('Email is required'),\n  password: yup\n    .string('Enter your password')\n    .min(2, 'Password should be of minimum 8 characters length')\n    .required('Password is required'),\n  confirm_password: yup\n    .string()\n    .required('Confirm Password is required')\n    .oneOf([yup.ref('password'), null], 'Password must match'),\n  role: yup.string().oneOf(['student', 'teacher'], 'Invalid role').required('Role is required'),\n});\n\nconst UserAccount = () => {\n  const { userInfo } = useSelector((state) => state.auth);\n\n  const initialUserValues = {\n    name: userInfo.name || '',\n    email: userInfo.email || '',\n    password: userInfo.password || '',\n    confirm_password: '',\n    role: userInfo.role || 'student',\n  };\n\n  const formik = useFormik({\n    initialValues: initialUserValues,\n    validationSchema: userValidationSchema,\n    onSubmit: (values, action) => {\n      handleSubmit(values);\n    },\n  });\n\n  const dispatch = useDispatch();\n\n  const [updateProfile, { isLoading }] = useUpdateUserMutation();\n\n  const handleSubmit = async ({ name, email, password, confirm_password, role }) => {\n    if (password !== confirm_password) {\n      toast.error('Passwords do not match');\n    } else {\n      try {\n        const res = await updateProfile({\n          _id: userInfo._id,\n          name,\n          email,\n          password,\n          role,\n        }).unwrap();\n        dispatch(setCredentials(res));\n        toast.success('Profile updated successfully');\n      } catch (err) {\n        toast.error(err?.data?.message || err.error);\n      }\n    }\n  };\n\n  return (\n    <PageContainer title=\"UserAccount\" description=\"this is UserAccount page\">\n      <Box\n        sx={{\n          position: 'relative',\n          '&:before': {\n            content: '\"\"',\n            background: 'radial-gradient(#d2f1df, #d3d7fa, #bad8f4)',\n            backgroundSize: '400% 400%',\n            animation: 'gradient 15s ease infinite',\n            position: 'absolute',\n            height: '100%',\n            width: '100%',\n            opacity: '0.3',\n          },\n        }}\n      >\n        <Grid container spacing={0} justifyContent=\"center\" sx={{ height: '100vh' }}>\n          <Grid\n            item\n            xs={12}\n            sm={12}\n            lg={12}\n            xl={6}\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Card elevation={9} sx={{ p: 4, zIndex: 1, width: '100%', maxWidth: '500px' }}>\n              <AuthUpdate\n                formik={formik}\n                onSubmit={handleSubmit}\n                title={\n                  <Typography variant=\"h3\" textAlign=\"center\" color=\"textPrimary\" mb={1}>\n                    Update Account Info\n                  </Typography>\n                }\n              />\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </PageContainer>\n  );\n};\nexport default UserAccount;\n"],"names":["_ref","title","description","children","_jsxs","Helmet","_jsx","name","content","styled","props","TextField","_objectSpread","theme","color","palette","text","secondary","opacity","borderColor","grey","LinkStyled","Link","height","width","overflow","display","justifyContent","alignItems","margin","textDecoration","Logo","to","src","alt","USERS_URL","userApiSlice","apiSlice","injectEndpoints","endpoints","builder","login","mutation","query","data","url","concat","method","body","register","logout","updateUser","useLoginMutation","useLogoutMutation","useRegisterMutation","useUpdateUserMutation","Loader","_Fragment","Backdrop","open","sx","zIndex","drawer","CircularProgress","formik","subtitle","subtext","values","errors","touched","handleBlur","handleChange","handleSubmit","Typography","fontWeight","variant","mb","Box","component","Stack","htmlFor","CustomTextField","id","placeholder","value","onChange","onBlur","error","helperText","fullWidth","required","mt","email","type","password","autoComplete","confirm_password","Select","displayEmpty","role","MenuItem","Button","size","onClick","userValidationSchema","yup","min","max","oneOf","UserAccount","userInfo","useSelector","state","auth","initialUserValues","useFormik","initialValues","validationSchema","onSubmit","action","dispatch","useDispatch","updateProfile","isLoading","async","toast","res","_id","unwrap","setCredentials","success","err","_err$data","message","PageContainer","position","background","backgroundSize","animation","Grid","container","spacing","item","xs","sm","lg","xl","Card","elevation","p","maxWidth","AuthUpdate","textAlign"],"sourceRoot":""}